name: üöÄ Captura Ultra-R√°pida (Nativo)

# Configuraci√≥n de triggers
on:
  # Ejecuci√≥n autom√°tica cada 5 minutos
  schedule:
    - cron: '*/5 * * * *'
  
  # Permite ejecuci√≥n manual desde la interfaz de GitHub
  workflow_dispatch:
    inputs:
      cleanup_old_files:
        description: 'Limpiar archivos antiguos (mantener √∫ltimos 100)'
        required: false
        default: 'true'
        type: boolean

# Configuraci√≥n de permisos
permissions:
  contents: write
  actions: read

jobs:
  capture-radar-native:
    name: ‚ö° Captura Ultra-R√°pida con Herramientas Nativas
    runs-on: ubuntu-latest
    
    # Timeout reducido porque es m√°s r√°pido
    timeout-minutes: 5
    
    steps:
      # 1. Checkout del repositorio
      - name: üì• Checkout repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. Instalar herramientas m√≠nimas
      - name: üì¶ Instalar herramientas nativas
        run: |
          echo "üì¶ Actualizando paquetes del sistema..."
          sudo apt-get update -qq
          
          echo "üîß Instalando wkhtmltopdf y dependencias..."
          sudo apt-get install -y wkhtmltopdf xvfb curl
          
          echo "‚úÖ Verificando instalaci√≥n..."
          wkhtmltoimage --version
          
          echo "üñ•Ô∏è Configurando display virtual..."
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          sleep 2
          echo "‚úÖ Entorno configurado correctamente"

      # 3. Verificar estructura
      - name: üìÅ Verificar directorios
        run: |
          echo "üîç Verificando estructura del proyecto..."
          mkdir -p captures
          ls -la captures/ || echo "Carpeta captures vac√≠a"
          
          echo "üåê Verificando conectividad..."
          curl -I https://www.windy.com --max-time 10 || echo "‚ö†Ô∏è Problema de conectividad"
          
          echo "üíæ Espacio disponible:"
          df -h . | head -2

      # 4. Ejecutar captura ultra-r√°pida
      - name: ‚ö° Ejecutar captura ultra-r√°pida
        run: |
          echo "üöÄ Iniciando captura ultra-r√°pida..."
          
          # Verificar script
          if [ ! -f "scripts/capture-native.sh" ]; then
            echo "‚ùå Script nativo no encontrado, usando comando directo..."
            
            # Captura directa con wkhtmltoimage
            TIMESTAMP=$(date -u +"%Y-%m-%d_%H-%M-%S")
            FILENAME="radar_${TIMESTAMP}.png"
            FILEPATH="captures/${FILENAME}"
            
            export DISPLAY=:99
            wkhtmltoimage \
              --width 1920 \
              --height 1080 \
              --format png \
              --quality 90 \
              --javascript-delay 3000 \
              --no-stop-slow-scripts \
              "https://www.windy.com/-Weather-radar-radar?radar,39.853,-3.807,7" \
              "$FILEPATH"
              
            echo "‚úÖ Captura completada: $FILENAME"
          else
            echo "‚úÖ Usando script nativo..."
            chmod +x scripts/capture-native.sh
            export DISPLAY=:99
            ./scripts/capture-native.sh
          fi
          
          echo "üìä Resultados:"
          ls -la captures/*.png 2>/dev/null || echo "No hay capturas PNG"

      # 5. Verificar cambios
      - name: üîç Verificar cambios
        id: verify-changes
        run: |
          echo "üîç Verificando estado del repositorio..."
          
          # Contar archivos
          FILE_COUNT=$(find captures -name "*.png" 2>/dev/null | wc -l)
          echo "file_count=$FILE_COUNT" >> $GITHUB_OUTPUT
          echo "üìä Total de capturas: $FILE_COUNT"
          
          # Verificar cambios
          if git diff --quiet && git diff --staged --quiet; then
            echo "‚ÑπÔ∏è No hay cambios para commitear"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ Se detectaron cambios"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            
            echo "üìã Estado de Git:"
            git status --porcelain
          fi

      # 6. Limpieza autom√°tica
      - name: üßπ Limpieza autom√°tica
        if: steps.verify-changes.outputs.has_changes == 'true'
        run: |
          cd captures
          FILE_COUNT=$(find . -name "radar_*.png" | wc -l)
          
          if [ "$FILE_COUNT" -gt 100 ]; then
            echo "üßπ Eliminando archivos antiguos (manteniendo √∫ltimos 100)..."
            find . -name "radar_*.png" -printf '%T@ %p\n' | sort -n | head -n -100 | cut -d' ' -f2- | xargs rm -f
            NEW_COUNT=$(find . -name "radar_*.png" | wc -l)
            echo "‚úÖ Limpieza completada. Archivos restantes: $NEW_COUNT"
          else
            echo "‚ÑπÔ∏è No necesita limpieza (solo $FILE_COUNT archivos)"
          fi

      # 7. Configurar Git y commit
      - name: üíæ Commit y push cambios
        if: steps.verify-changes.outputs.has_changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action - Ultra Fast Radar"
          
          git add captures/
          
          TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
          FINAL_COUNT=$(find captures -name "radar_*.png" | wc -l)
          git commit -m "‚ö° Captura ultra-r√°pida del radar - $TIMESTAMP (Total: $FINAL_COUNT capturas)"
          
          git push

      # 8. Resumen final
      - name: üìã Resumen de ejecuci√≥n
        if: always()
        run: |
          echo "=== ‚ö° RESUMEN ULTRA-R√ÅPIDO ==="
          echo "‚è∞ Timestamp: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo "üîÑ Trigger: ${{ github.event_name }}"
          
          if [ "${{ steps.verify-changes.outputs.has_changes }}" == "true" ]; then
            echo "‚úÖ Estado: Captura exitosa y cambios commiteados"
            echo "üìä Total de capturas: ${{ steps.verify-changes.outputs.file_count }}"
          else
            echo "‚ÑπÔ∏è Estado: Ejecuci√≥n completada, sin cambios"
          fi
          
          echo "üìÅ Contenido actual:"
          ls -la captures/ | tail -3 || echo "Sin archivos"
          
          echo "üíæ Tama√±o total:"
          du -sh captures/ || echo "0B"
          
          echo "‚ö° Ventajas de esta implementaci√≥n:"
          echo "  - Sin dependencias de Node.js"
          echo "  - Sin descarga de Chromium (150MB+)"
          echo "  - Instalaci√≥n en ~30 segundos vs 5+ minutos"
          echo "  - Uso de herramientas nativas del sistema"